{"ast":null,"code":"var _jsxFileName = \"/Users/Teva/Desktop/react-course/ecom-project/client/src/pages/checkout/CheckoutPage.jsx\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\nimport { selectCartItems, selectCartTotal } from '../../redux/Cart/cartSelectors';\nimport CheckoutItem from '../../components/CheckoutItem/CheckoutItem';\nimport StripeCheckoutButton from '../../components/StripeButton/StripeButton';\nimport { CheckoutPageContainer, CheckoutHeaderContainer, HeaderBlockContainer, TestWarningContainer, CheckoutTotalContainer } from './CheckoutPageStyles';\n\nconst CheckoutPage = ({\n  cartItems,\n  cartTotal\n}) => React.createElement(CheckoutPageContainer, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 17\n  },\n  __self: this\n}, React.createElement(CheckoutHeaderContainer, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 18\n  },\n  __self: this\n}, React.createElement(HeaderBlockContainer, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 19\n  },\n  __self: this\n}, React.createElement(\"span\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 19\n  },\n  __self: this\n}, \"Product\")), React.createElement(HeaderBlockContainer, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 20\n  },\n  __self: this\n}, React.createElement(\"span\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 20\n  },\n  __self: this\n}, \"Descriptioon\")), React.createElement(HeaderBlockContainer, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 21\n  },\n  __self: this\n}, React.createElement(\"span\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 21\n  },\n  __self: this\n}, \"Quantity\")), React.createElement(HeaderBlockContainer, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 22\n  },\n  __self: this\n}, React.createElement(\"span\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 22\n  },\n  __self: this\n}, \"Price\")), React.createElement(HeaderBlockContainer, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 23\n  },\n  __self: this\n}, React.createElement(\"span\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 23\n  },\n  __self: this\n}, \"Remove\"))), cartItems.map(cartItem => React.createElement(CheckoutItem, {\n  key: cartItem.id,\n  cartItem: cartItem,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 25\n  },\n  __self: this\n})), React.createElement(CheckoutTotalContainer, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 26\n  },\n  __self: this\n}, \"Total: $\", cartTotal), React.createElement(TestWarningContainer, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 27\n  },\n  __self: this\n}, \"*Please use the following test credit card for payments*\", React.createElement(\"br\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 29\n  },\n  __self: this\n}), \"4242 4242 4242 4242 - Exp: 01/20 - CVV: 123\"), React.createElement(StripeCheckoutButton, {\n  price: cartTotal,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 32\n  },\n  __self: this\n}));\n\nconst mapStateToProps = createStructuredSelector({\n  cartItems: selectCartItems,\n  cartTotal: selectCartTotal\n});\nexport default connect(mapStateToProps)(CheckoutPage);","map":{"version":3,"sources":["/Users/Teva/Desktop/react-course/ecom-project/client/src/pages/checkout/CheckoutPage.jsx"],"names":["React","connect","createStructuredSelector","selectCartItems","selectCartTotal","CheckoutItem","StripeCheckoutButton","CheckoutPageContainer","CheckoutHeaderContainer","HeaderBlockContainer","TestWarningContainer","CheckoutTotalContainer","CheckoutPage","cartItems","cartTotal","map","cartItem","id","mapStateToProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,wBAAT,QAAyC,UAAzC;AACA,SAASC,eAAT,EAA0BC,eAA1B,QAAiD,gCAAjD;AAEA,OAAOC,YAAP,MAAyB,4CAAzB;AACA,OAAOC,oBAAP,MAAiC,4CAAjC;AACA,SACEC,qBADF,EAEEC,uBAFF,EAGEC,oBAHF,EAIEC,oBAJF,EAKEC,sBALF,QAMO,sBANP;;AAQA,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA,SAAF;AAAaC,EAAAA;AAAb,CAAD,KACnB,oBAAC,qBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE,oBAAC,uBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE,oBAAC,oBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAsB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAtB,CADF,EAEE,oBAAC,oBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAsB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAtB,CAFF,EAGE,oBAAC,oBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAsB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAtB,CAHF,EAIE,oBAAC,oBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAsB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAtB,CAJF,EAKE,oBAAC,oBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAsB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAtB,CALF,CADF,EAQGD,SAAS,CAACE,GAAV,CAAcC,QAAQ,IAAI,oBAAC,YAAD;AAAc,EAAA,GAAG,EAAEA,QAAQ,CAACC,EAA5B;AAAgC,EAAA,QAAQ,EAAED,QAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAA1B,CARH,EASE,oBAAC,sBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAiCF,SAAjC,CATF,EAUE,oBAAC,oBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+DAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAFF,gDAVF,EAeE,oBAAC,oBAAD;AAAsB,EAAA,KAAK,EAAEA,SAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAfF,CADF;;AAoBA,MAAMI,eAAe,GAAGhB,wBAAwB,CAAC;AAC/CW,EAAAA,SAAS,EAAEV,eADoC;AAE/CW,EAAAA,SAAS,EAAEV;AAFoC,CAAD,CAAhD;AAKA,eAAeH,OAAO,CAACiB,eAAD,CAAP,CAAyBN,YAAzB,CAAf","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\nimport { selectCartItems, selectCartTotal } from '../../redux/Cart/cartSelectors';\n\nimport CheckoutItem from '../../components/CheckoutItem/CheckoutItem';\nimport StripeCheckoutButton from '../../components/StripeButton/StripeButton';\nimport {\n  CheckoutPageContainer, \n  CheckoutHeaderContainer,\n  HeaderBlockContainer,\n  TestWarningContainer, \n  CheckoutTotalContainer\n} from './CheckoutPageStyles';\n\nconst CheckoutPage = ({ cartItems, cartTotal }) => (\n  <CheckoutPageContainer>\n    <CheckoutHeaderContainer>\n      <HeaderBlockContainer><span>Product</span></HeaderBlockContainer>\n      <HeaderBlockContainer><span>Descriptioon</span></HeaderBlockContainer>\n      <HeaderBlockContainer><span>Quantity</span></HeaderBlockContainer>\n      <HeaderBlockContainer><span>Price</span></HeaderBlockContainer>\n      <HeaderBlockContainer><span>Remove</span></HeaderBlockContainer>\n    </CheckoutHeaderContainer>\n    {cartItems.map(cartItem => <CheckoutItem key={cartItem.id} cartItem={cartItem} />)}\n    <CheckoutTotalContainer>Total: ${cartTotal}</CheckoutTotalContainer>\n    <TestWarningContainer>\n      *Please use the following test credit card for payments*\n      <br/>\n      4242 4242 4242 4242 - Exp: 01/20 - CVV: 123\n    </TestWarningContainer>\n    <StripeCheckoutButton price={cartTotal} />\n  </CheckoutPageContainer>\n)\n\nconst mapStateToProps = createStructuredSelector({\n  cartItems: selectCartItems,\n  cartTotal: selectCartTotal\n})\n\nexport default connect(mapStateToProps)(CheckoutPage);"]},"metadata":{},"sourceType":"module"}