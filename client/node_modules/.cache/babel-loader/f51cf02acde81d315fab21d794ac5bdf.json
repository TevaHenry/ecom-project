{"ast":null,"code":"var _jsxFileName = \"/Users/Teva/Desktop/react-course/ecom-project/src/components/SignIn/SignIn.jsx\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport FormInput from '../FormInput/FormInput';\nimport CustomButton from '../CustomButton/CustomButton';\nimport { googleSignInStart, emailSignInStart } from '../../redux/User/userActions';\nimport './SignIn.scss';\n\nclass SignIn extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSubmit = async event => {\n      event.preventDefault();\n      const emailSignInStart = this.state.emailSignInStart;\n      const _this$state = this.state,\n            email = _this$state.email,\n            password = _this$state.password;\n      emailSignInStart(email, password);\n    };\n\n    this.handleChange = event => {\n      const _event$target = event.target,\n            value = _event$target.value,\n            name = _event$target.name;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.state = {\n      email: '',\n      password: ''\n    };\n  }\n\n  render() {\n    const googleSignInStart = this.props.googleSignInStart;\n    return React.createElement(\"div\", {\n      className: \"sign-in\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      className: \"title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, \"I already have an account\"), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, \"Sign in with your email and password\"), React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, React.createElement(FormInput, {\n      name: \"email\",\n      type: \"email\",\n      value: this.state.email,\n      handleChange: this.handleChange,\n      label: \"email\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }), React.createElement(FormInput, {\n      name: \"password\",\n      type: \"password\",\n      value: this.state.password,\n      handleChange: this.handleChange,\n      label: \"password\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"buttons\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(CustomButton, {\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, \" Sign in \"), React.createElement(CustomButton, {\n      type: \"button\",\n      onClick: googleSignInStart,\n      isGoogleSignIn: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, \" Sign in with Google \"))));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  googleSignInStart: () => dispatch(googleSignInStart()),\n  emailSignInStart: (email, password) => dispatch(emailSignInStart(email, password))\n});\n\nexport default connect(null, mapDispatchToProps)(SignIn);","map":{"version":3,"sources":["/Users/Teva/Desktop/react-course/ecom-project/src/components/SignIn/SignIn.jsx"],"names":["React","connect","FormInput","CustomButton","googleSignInStart","emailSignInStart","SignIn","Component","constructor","props","handleSubmit","event","preventDefault","state","email","password","handleChange","target","value","name","setState","render","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux'\n\nimport FormInput from '../FormInput/FormInput';\nimport CustomButton from '../CustomButton/CustomButton';\nimport { googleSignInStart, emailSignInStart } from '../../redux/User/userActions';\nimport './SignIn.scss';\n\nclass SignIn extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      email: '',\n      password: ''\n    }\n  }\n\n  handleSubmit = async event => {\n    event.preventDefault();\n    const { emailSignInStart } = this.state;\n    const { email, password } = this.state;\n\n    emailSignInStart(email, password)\n  }\n\n  handleChange = event => {\n    const { value, name } = event.target;\n\n    this.setState({ [name]: value });\n  }\n\n  render() {\n    const { googleSignInStart } = this.props\n\n    return(\n      <div className=\"sign-in\">\n        <h2 className='title'>I already have an account</h2>\n        <span>Sign in with your email and password</span>\n        \n        <form onSubmit={this.handleSubmit} >\n          <FormInput \n            name='email' \n            type='email' \n            value={this.state.email} \n            handleChange={this.handleChange} \n            label='email' \n            required \n          />\n          <FormInput \n            name='password'\n            type='password' \n            value={this.state.password} \n            handleChange={this.handleChange} \n            label='password' \n            required \n          />\n          <div className=\"buttons\">\n            <CustomButton type='submit'> Sign in </CustomButton>\n            <CustomButton type='button' onClick={googleSignInStart} isGoogleSignIn> Sign in with Google </CustomButton>\n          </div>\n        </form>\n      </div>\n    )\n  }\n}\n\nconst mapDispatchToProps = dispatch => ({\n  googleSignInStart: () => dispatch(googleSignInStart()), \n  emailSignInStart: (email, password) => dispatch(emailSignInStart(email, password))\n})\n\nexport default connect(null, mapDispatchToProps)(SignIn);"]},"metadata":{},"sourceType":"module"}